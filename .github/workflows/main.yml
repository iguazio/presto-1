name: CI

on: [push, pull_request]

env:
  MAVEN_OPTS: "-Xmx512M -XX:+ExitOnOutOfMemoryError"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError"
  MAVEN_FAST_INSTALL: "-B -e -V -DskipTests -Dair.check.skip-all"

jobs:
  maven-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Checks
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install -B -e -V -T C1 -DskipTests -P ci -pl '!presto-server-rpm'
      - name: Test Server RPM
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install -B -e -P ci -pl presto-server-rpm
      - name: Test Docker Image
        run: docker/build-local.sh

  error-prone-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!presto-docs,!presto-server,!presto-server-rpm'
      - name: Error Prone Checks
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw -B -e -T C1 clean test-compile -Dair.check.skip-all -P errorprone-compiler-presto \
            -pl '!presto-docs,!presto-server,!presto-server-rpm'

  web-ui-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Web UI Checks
        run: presto-main/bin/check_webui.sh

  hive-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [
          config-empty,
          config-hdp3,
          # TODO config-cdh5,
        ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Install Hive Module
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl presto-hive-hadoop2 -am
      - name: Run Hive Tests
        run: |
          source presto-product-tests/conf/product-tests-${{ matrix.config }}.sh &&
            presto-hive-hadoop2/bin/run_hive_tests.sh

  kudu-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Install Kudu Module
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl presto-kudu -am
      - name: Run Kudu Tests -- disable InferSchema
        run: presto-kudu/bin/run_kudu_tests.sh "null"
      - name: Run Kudu Tests -- enable InferSchema, empty prefix
        run: presto-kudu/bin/run_kudu_tests.sh ""
      - name: Run Kudu Tests -- enable InferSchema, standard prefix
        run: presto-kudu/bin/run_kudu_tests.sh "presto::"

  presto-tests-ci-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl presto-tests -am
      - name: Maven Tests
        run: ./mvnw test -B -e -Dair.check.skip-all -pl presto-tests -P ci-only

  test-other-modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!presto-docs,!presto-server,!presto-server-rpm'
      - name: Maven Tests
        run: |
          ./mvnw test -B -e -Dair.check.skip-all -pl '
            !presto-main,!presto-testing,
            !presto-tests,
            !presto-raptor-legacy,
            !presto-accumulo,
            !presto-cassandra,
            !presto-hive,!presto-orc,!presto-parquet,
            !presto-mongodb,!presto-kafka,!presto-elasticsearch,
            !presto-redis,
            !presto-sqlserver,!presto-postgresql,!presto-mysql,
            !presto-phoenix,!presto-iceberg,
            !presto-kudu,
            !presto-docs,!presto-server,!presto-server-rpm'

  test-modules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: [
          "presto-main,presto-testing",
          "presto-tests",
          "presto-raptor-legacy",
          "presto-accumulo",
          "presto-cassandra",
          "presto-hive,presto-orc,presto-parquet",
          "presto-mongodb,presto-kafka,presto-elasticsearch",
          "presto-redis",
          "presto-sqlserver,presto-postgresql,presto-mysql",
          "presto-phoenix,presto-iceberg",
        ]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '${{ matrix.modules }}' -am
      - name: Maven Tests
        run: ./mvnw test -B -e -Dair.check.skip-all -pl '${{ matrix.modules }}'

  product-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [
          config-empty,
          config-hdp3,
          config-cdh5,
        ]
        suite: [
          suite-1,
          suite-2,
          suite-3,
          # suite-4 does not exist
          suite-5,
          suite-6-non-generic,
          suite-7-non-generic,
        ]
        exclude:
          - config: config-hdp3
            suite: suite-6-non-generic
          - config: config-hdp3
            suite: suite-7-non-generic
          - config: config-cdh5
            suite: suite-6-non-generic
          - config: config-cdh5
            suite: suite-7-non-generic
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!presto-docs,!presto-server-rpm'
      - name: Product Tests
        run: |
          source presto-product-tests/conf/product-tests-${{ matrix.config }}.sh &&
            presto-product-tests/bin/product-tests-${{ matrix.suite }}.sh
